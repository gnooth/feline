// Copyright (C) 2019-2020 Peter Graves <gnooth@gmail.com>

// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.

// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.

// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.

using: editor feral-core feline accessors modes key ;
in: list-buffers

private

constant: name "List Buffers" ;

constant: buffer-name-column 4 ;

constant: buffer-directory-column 40 ;

: list-buffers-select
    :buffer dot-line line-get-property :> selected-buffer
    current-buffer parent>> current-buffer!
    selected-buffer set-current-buffer
    true repaint?!
    update-display ;

: list-buffers-delete
    :buffer dot-line line-get-property :> buf
    buf buffer-modified? [
        "Buffer is modified" message
    ] [
        buffer-list vector? assert
        buffer-list [ buf eq? ] find    // -> index/nil element/nil
        [
            // -> index
            buffer-list vector-remove-nth!

            delete-line-internal
            buffer-name-column dot-offset!
            mod-count mod-count-last-save!
            update-display
        ] when
    ] if ;

: list-buffers-quit
    current-buffer parent>> current-buffer!
    true repaint?!
    update-display ;

global list-buffers-local-map

: initialize-local-map
    128 <hashtable> :> keymap
    ' list-buffers-select   feral-key:enter     keymap set-at
    ' list-buffers-delete   feral-key:delete    keymap set-at
    ' list-buffers-quit     feral-key:escape    keymap set-at
    ' list-buffers-quit     feral-key:ctrl-w    keymap set-at
    keymap list-buffers-local-map! ;

initialize-local-map

feral-config:gtkui? #if
' list-buffers-delete feral-key:kp-delete list-buffers-local-map set-at
#endif

feral-config:winui? feral-config:gtkui? or #if
' list-buffers-select feral-key:double-mouse-1 list-buffers-local-map set-at
#endif

: list-buffers
    current-buffer name>> name eq? ?exit

    make-buffer :> buf
    name buf name<<
    current-buffer-directory buf directory<<
    list-buffers-local-map buf local-map<<

    current-buffer in-buffer-list? [ current-buffer ] [ current-buffer parent>> ] if
    :> parent-buffer

    parent-buffer in-buffer-list? assert

    local b
    local sb
    local parent-buffer-line
    local line
    buffer-list [
        b!
        128 <sbuf> sb!

        b current-buffer eq? '.' '\s' ? sb sbuf-push
        b read-only>>        'r' '\s' ? sb sbuf-push
        b buffer-modified?   '*' '\s' ? sb sbuf-push
        '\s' sb push
        b buffer-name sb sbuf-append-string

        b filename>> [
            directory? [
                '\s' sb push
                [ sb length buffer-directory-column < ] [ '\s' sb push ] while
                b directory>> sb sbuf-append-string
            ] unless
        ] when*

        sb sbuf>string make-line/1 line!
        b :buffer line line-set-property
        line buf buffer-append-line

        b parent-buffer eq? [ buf last-line>> parent-buffer-line! ] when
    ] each

    parent-buffer buf parent<<

    true buf read-only<<

    buf first-line>> buf top-line<<

    parent-buffer-line buf first-line>> or // line
    buffer-name-column                     // column
    make-position buf dot<<

    buffer-name-column buf goal-column<<

    buf current-buffer!
    renumber
    true repaint?! ;

in: editor

public

: list-buffers
    list-buffers:list-buffers ;
