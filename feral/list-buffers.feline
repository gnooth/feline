// Copyright (C) 2019 Peter Graves <gnooth@gmail.com>

// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.

// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.

// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.

using: editor feral-core feline accessors modes key ;
in: list-buffers

private

tuple: list-buffers-mode
    formatter ;

global list-buffers-old-buffer

4 constant buffer-name-column

40 constant buffer-directory-column

: list-buffers-select
    :buffer dot-line line-get-property current-buffer!
    t repaint!
    update-display ;

: list-buffers-quit
    list-buffers-old-buffer current-buffer!
    t repaint!
    update-display ;

global list-buffers-local-map

: initialize-local-map
    128 <hashtable> :> keymap
    ' list-buffers-select   feral-key:enter     keymap set-at
    ' list-buffers-quit     feral-key:escape    keymap set-at
    ' list-buffers-quit     feral-key:ctrl-w    keymap set-at
    keymap list-buffers-local-map! ;

initialize-local-map

feral-config:winui? #if

' list-buffers-select feral-key:double-mouse-1 list-buffers-local-map set-at

#endif

: list-buffers
    current-buffer list-buffers-old-buffer!
    make-buffer :> buf
    "List Buffers" buf name<<
    current-buffer directory>> buf directory<<
    list-buffers-local-map buf local-map<<

    f !> b
    f !> sb
    f !> old-buffer-line
    f !> line
    buffer-list [
        b!
        128 <sbuf> sb!

        b list-buffers-old-buffer eq?   '.' '\s' ? sb sbuf-push
        b read-only>>                   'r' '\s' ? sb sbuf-push
        b buffer-modified?              '*' '\s' ? sb sbuf-push
        '\s' sb push
        b buffer-name sb sbuf-append-string

        b filename>> [
            directory? [
                '\s' sb push
                [ sb length buffer-directory-column < ] [ '\s' sb push ] while
                b directory>> sb sbuf-append-string
            ] unless
        ] when*

        sb sbuf>string make-line/1 line!
        b :buffer line line-set-property
        line buf buffer-append-line

        b list-buffers-old-buffer eq? [ buf last-line>> old-buffer-line! ] when
    ] each

    buf first-line>> buf top-line<<

    old-buffer-line buf first-line>> or // line
    buffer-name-column                  // column
    make-position buf dot<<

    buffer-name-column buf goal-column<<

    buf current-buffer!
    renumber
    t repaint!
;

in: editor

public

: list-buffers
    list-buffers:list-buffers ;
