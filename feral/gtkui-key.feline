// Copyright (C) 2019-2020 Peter Graves <gnooth@gmail.com>

// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.

// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.

// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.

using: feline ;
in: feral-key

feral-config:gtkui? assert

public

constant: double-mouse-1    0xfeef ;    // GDK_KEY_Pointer_DblClick1

constant: tab       0xff09 ;
constant: escape    0xff1b ;

constant: delete                0xffff ;
constant: kp-delete             0xff9f ;
constant: ctrl-delete           delete ctrl ;
constant: ctrl-kp-delete        kp-delete ctrl ;
constant: shift-delete          delete shift ;
constant: shift-kp-delete       0xffae shift ; // GDK_KEY_KP_Decimal (0xffae)
constant: ctrl-shift-delete     delete ctrl shift ;
constant: ctrl-shift-kp-delete  0xffae ctrl shift ; // GDK_KEY_KP_Decimal (0xffae)

constant: home          0xff50 ;
constant: end           0xff57 ;
constant: left          0xff51 ;
constant: right         0xff53 ;
constant: up            0xff52 ;
constant: down          0xff54 ;
constant: pageup        0xff55 ;
constant: pagedown      0xff56 ;

constant: kp-home       0xff95 ;
constant: kp-end        0xff9c ;
constant: kp-left       0xff96 ;
constant: kp-right      0xff98 ;
constant: kp-up         0xff97 ;
constant: kp-down       0xff99 ;
constant: kp-pageup     0xff9a ;
constant: kp-pagedown   0xff9b ;

constant: backspace     0xff08 ;
constant: enter         0xff0d ;

constant: ctrl-/ '/' char-code ctrl ;
constant: ctrl-[ '[' char-code ctrl ;
constant: ctrl-] ']' char-code ctrl ;

constant: ctrl-backspace backspace ctrl ;

constant: ctrl-home     home ctrl ;
constant: ctrl-end      end ctrl ;
constant: ctrl-up       up ctrl ;
constant: ctrl-down     down ctrl ;
constant: ctrl-left     left ctrl ;
constant: ctrl-right    right ctrl ;

constant: ctrl-kp-home  kp-home ctrl ;
constant: ctrl-kp-end   kp-end ctrl ;
constant: ctrl-kp-up    kp-up ctrl ;
constant: ctrl-kp-down  kp-down ctrl ;
constant: ctrl-kp-left  kp-left ctrl ;
constant: ctrl-kp-right kp-right ctrl ;

constant: alt-left      left alt ;
constant: alt-kp-left   kp-left alt ;
constant: alt-right     right alt ;
constant: alt-kp-right  kp-right alt ;

constant: alt-down      down alt ;
constant: alt-kp-down   kp-down alt ;
constant: alt-up        up alt ;
constant: alt-kp-up     kp-up alt ;

constant: f1    0xffbe ;
constant: f2    0xffbf ;
constant: f3    0xffc0 ;
constant: f4    0xffc1 ;
constant: f5    0xffc2 ;
constant: f6    0xffc3 ;
constant: f7    0xffc4 ;
constant: f8    0xffc5 ;
constant: f9    0xffc6 ;
constant: f10   0xffc7 ;
constant: f11   0xffc8 ;
constant: f12   0xffc9 ;

constant: ctrl-f3   f3 ctrl ;

constant: shift-f3  f3 shift ;
constant: shift-f11 f11 shift ;
constant: shift-f12 f12 shift ;

constant: shift-left    left shift ;
constant: shift-right   right shift ;
constant: shift-up      up shift ;
constant: shift-down    down shift ;
constant: shift-home    home shift ;
constant: shift-end     end shift ;

constant: ctrl-shift-left   left ctrl shift ;
constant: ctrl-shift-right  right ctrl shift ;
constant: ctrl-shift-up     up ctrl shift ;
constant: ctrl-shift-down   down ctrl shift ;
constant: ctrl-shift-home   home ctrl shift ;
constant: ctrl-shift-end    end ctrl shift ;

constant: ctrl-shift-f3     f3 ctrl shift ;

constant: shift-kp-left         0x0004ffb4 ; // GDK_KEY_KP_4
constant: shift-kp-right        0x0004ffb6 ; // GDK_KEY_KP_6
constant: shift-kp-up           0x0004ffb8 ; // GDK_KEY_KP_8
constant: shift-kp-down         0x0004ffb2 ; // GDK_KEY_KP_2
constant: shift-kp-home         0x0004ffb7 ; // GDK_KEY_KP_7
constant: shift-kp-end          0x0004ffb1 ; // GDK_KEY_KP_1

constant: ctrl-shift-kp-left    0x0006ffb4 ; // GDK_KEY_KP_4
constant: ctrl-shift-kp-right   0x0006ffb6 ; // GDK_KEY_KP_6
constant: ctrl-shift-kp-up      0x0006ffb8 ; // GDK_KEY_KP_8
constant: ctrl-shift-kp-down    0x0006ffb2 ; // GDK_KEY_KP_2
constant: ctrl-shift-kp-home    0x0006ffb7 ; // GDK_KEY_KP_7
constant: ctrl-shift-kp-end     0x0006ffb1 ; // GDK_KEY_KP_1

constant: ctrl-space 0x20 ctrl ;

constant: alt-b 'b' char-code alt ;
constant: alt-c 'c' char-code alt ;
constant: alt-i 'i' char-code alt ;
constant: alt-l 'l' char-code alt ;
constant: alt-r 'r' char-code alt ;
constant: alt-v 'v' char-code alt ;
constant: alt-w 'w' char-code alt ;
constant: alt-x 'x' char-code alt ;

constant: alt-. '.' char-code alt ;
constant: alt-; ';' char-code alt ;
constant: alt-/ '/' char-code alt ;

constant: alt-f3 f3 alt ;

constant: ctrl-a 'a' char-code ctrl ;
constant: ctrl-b 'b' char-code ctrl ;
constant: ctrl-c 'c' char-code ctrl ;
constant: ctrl-d 'd' char-code ctrl ;
constant: ctrl-e 'e' char-code ctrl ;
constant: ctrl-f 'f' char-code ctrl ;
constant: ctrl-g 'g' char-code ctrl ;
constant: ctrl-h 'h' char-code ctrl ;
constant: ctrl-i 'i' char-code ctrl ;
constant: ctrl-j 'j' char-code ctrl ;
constant: ctrl-k 'k' char-code ctrl ;
constant: ctrl-l 'l' char-code ctrl ;
constant: ctrl-m 'm' char-code ctrl ;
constant: ctrl-n 'n' char-code ctrl ;
constant: ctrl-o 'o' char-code ctrl ;
constant: ctrl-p 'p' char-code ctrl ;
constant: ctrl-q 'q' char-code ctrl ;
constant: ctrl-r 'r' char-code ctrl ;
constant: ctrl-s 's' char-code ctrl ;
constant: ctrl-t 't' char-code ctrl ;
constant: ctrl-u 'u' char-code ctrl ;
constant: ctrl-v 'v' char-code ctrl ;
constant: ctrl-w 'w' char-code ctrl ;
constant: ctrl-x 'x' char-code ctrl ;
constant: ctrl-y 'y' char-code ctrl ;
constant: ctrl-z 'z' char-code ctrl ;

constant: ctrl-shift-d 'd' char-code ctrl shift ;
constant: ctrl-shift-f 'F' char-code ctrl shift ;
constant: ctrl-shift-k 'K' char-code ctrl shift ;
constant: ctrl-shift-o 'O' char-code ctrl shift ;

: key-to-printable-char ( key )         // fixnum -> char/nil
    local result

    key code-char printable-char? [ result! ] when*

    result [
        key modifiers shift-bit eq? [
            // shift is the only modifier
            key 0xff bitand code-char printable-char? [
                result!
            ] when*
        ] when
    ] unless

    result ;
