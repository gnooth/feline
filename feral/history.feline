-- Copyright (C) 2018 Peter Graves <gnooth@gmail.com>

-- This program is free software: you can redistribute it and/or modify
-- it under the terms of the GNU General Public License as published by
-- the Free Software Foundation, either version 3 of the License, or
-- (at your option) any later version.

-- This program is distributed in the hope that it will be useful,
-- but WITHOUT ANY WARRANTY; without even the implied warranty of
-- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-- GNU General Public License for more details.

-- You should have received a copy of the GNU General Public License
-- along with this program.  If not, see <http://www.gnu.org/licenses/>.

using: feline accessors logging ;
in: history

private

var current-history

tuple: history
    strings
    index
;

: strings                               -- void -> vector/f
    current-history [ strings>> ] [ f ] if* ;

: index                                 -- void -> index/f
    current-history [ index>> ] [ f ] if* ;

: index!                                -- index -> void
    current-history [ index<< ] [ drop ] if* ;

public

: reset-history
    strings length index! ;

: set-current-history                   -- history/f -> void
   current-history!
   reset-history ;

: history-previous                      -- void -> string/f
    index [ strings length index! ] unless
    index 0 > [
        index 1- index!
        index strings nth
    ] [ f ] if ;

: history-next
    index [ strings length index! ] unless
    index strings length 1- < [
        index 1+ index!
        index strings nth
    ] [ reset-history f ] if ;

: make-history                          -- void -> history
    history make-instance
    100 <vector> >>strings
;

: update-history ( s )                  -- string/f -> void
    "update-history called" log
    s string? [
        current-history [
            strings>> s over vector-adjoin -- -> vector
            "-- begin history" log
            [ log ] each
            "-- end history" log
            --         save-history
        ] when*
    ] when
;
