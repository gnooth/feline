// Copyright (C) 2018-2019 Peter Graves <gnooth@gmail.com>

// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.

// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.

// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.

using: feline accessors logging directories ;
in: history

public

global current-history

private

tuple: history
    name
    filename
    strings
    index
;

: name                                  // void -> string/f
    current-history [ name>> ] [ f ] if* ;

: strings                               // void -> vector/f
    current-history [ strings>> ] [ f ] if* ;

: index                                 // void -> index/f
    current-history [ index>> ] [ f ] if* ;

: index!                                // index -> void
    current-history [ index<< ] [ drop ] if* ;

public

: reset-history
    strings [ length index! ] when* ;

: history-previous                      // void -> string/f
    index null? [ f ] return-if

    index 0 > [
        index 1- index!
        index strings nth
    ] [ f ] if ;

: history-next
    index null? [ f ] return-if

    index strings length 1- < [
        index 1+ index!
        index strings nth
    ] [ reset-history f ] if ;

: history-name->pathname                // name -> pathname
    feral-history-directory swap path-append ".history" string-append ;

: load-history ( name )                 // name -> history
    history make-instance :> hist
    name hist name<<
    feral-history-directory name path-append ".history" string-append hist filename<<
    name history-name->pathname :> pathname
    pathname regular-file? [
        pathname file-lines verify-vector
    ] [
        100 <vector>
    ] if
    hist over >>strings
    swap length >>index
;

: save-history
    strings [
        feral-history-directory name path-append ".history" string-append
        set-file-lines
    ] when*
;

: update-history ( s )                  // string/f -> void
    s string? [
        current-history [
            strings>> s swap vector-adjoin
            save-history
        ] when*
    ] when ;

: set-history                           // name -> void
    load-history current-history! ;
