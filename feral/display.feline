// Copyright (C) 2017-2020 Peter Graves <gnooth@gmail.com>

// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.

// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.

// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.

using: feral-core feline accessors segments feral-colors ;
in: editor

global changed-lines

16 make-vector changed-lines!

: line-changed // line -> void
    changed-lines vector-push ;

: clear-changed-lines
    changed-lines vector-delete-all ;

: string-format-line ( s ) // string -> segments
    current-buffer mode>> :> mode
    mode [
        s mode formatter call
    ] [
        s 0 color-text make-segment/3
        1array
    ] if ;

: line-format-line // line -> segments
    1 ?enough :> line
    current-buffer mode>> :> mode
    nil !> format-line-function
    mode [
        mode format-line-function>> format-line-function!
    ] when
    format-line-function [
        line format-line-function call
    ] ?return

    line text>> detab string-format-line ;

: format-line ( x ) // line-or-string -> segments
    x line? [ x line-format-line ] ?return
    x verify-string string-format-line ;

: mode-line-text // void -> string
    256 make-sbuf :> sb
    modified? '*' '\s' ? sb sbuf-push
    current-buffer name>> "untitled" or sb sbuf-append-string
    dot-line-number 1+
    line-count
    dot-column 1+
    " %d(%d):%d" format sb sbuf-append-string
    :git-branch current-buffer buffer-get-property [
        '\s' sb sbuf-push
        sb sbuf-append-string
    ] when*
    current-buffer mode>> [
        name>> [
            '\s' sb sbuf-push
            sb sbuf-append-string
        ] when*
    ] when*
    sb sbuf->string ;

using: feral-loader feral-config feline ;

winui? gtkui? or [ "display-common.feline" load-feral-source-file ] when

{
    { [ winui?  ] [ "winui-display.feline"  ] }
    { [ gtkui?  ] [ "gtkui-display.feline"  ] }
    { [ termui? ] [ "termui-display.feline" ] }
} cond load-feral-source-file
