// Copyright (C) 2019 Peter Graves <gnooth@gmail.com>

// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.

// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.

// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.

using: editor feral-core feline accessors mini ;
in: find-in-files

global find-in-files-local-map

global find-in-files-output-buffer

global find-in-files-pattern

global current-files

: find-in-file
    1 ?enough verify-string :> filename

    local linenumber
    local s
    local found
    local line
    filename file-lines [
        // -> string index
        1+ linenumber! // displayed line numbers are 1-based
        s!
        find-in-files-pattern s substring-start [
            found [
                // filename line
                filename make-line/1 line!
                filename :source-file line line-set-property
                line find-in-files-output-buffer buffer-append-line
                t found!
            ] unless
            linenumber number>string ":" + s + make-line/1 line!
            filename :source-file line line-set-property
            linenumber :source-line-number line line-set-property
            line find-in-files-output-buffer buffer-append-line
        ] when
    ] each-index ;

using: find-in-files search feral-core history mini feline accessors ;
in: editor

public

: find-in-files
    local default-pattern

    mark dot and [
        mark-line dot-line eq? [
            dot mark make-region/2 region-as-string default-pattern!
        ] when
    ] when

    default-pattern [
        current-mode identifier-at-dot nip default-pattern!
    ] unless

    "find" set-history
    "Find: "
    default-pattern empty? [
        minibuffer-accept-string
    ] [
        default-pattern minibuffer-accept-string/2
    ] if find-in-files-pattern!

    find-in-files-pattern empty? ?exit

    current-buffer directory>> file-name-as-directory :> default-directory

    local default-extension
    current-buffer filename>> [
        file-name-extension default-extension!
    ] [
        current-buffer parent>> [
            filename>> [
                file-name-extension default-extension!
            ] when*
        ] when*
    ] if*
    default-extension [ feline-extension default-extension! ] unless

    "files" set-history
    "Files: "
    default-directory "*" + default-extension +
    minibuffer-accept-string/2 current-files!

    current-files empty? ?exit

    current-files file-name-directory :> directory

    directory nil? ?exit

    find-in-files-pattern make-search current-search!

    make-buffer :> buf
    buf find-in-files-output-buffer!

    current-files directory-files [
        [
            directory swap path-append canonical-path [ find-in-file ] when*
        ] each
    ] when*

    buf first-line>> nil? [ "Not found" message ] ?return

    buf first-line>> 0 make-position buf dot<<
    buf first-line>> buf top-line<<
    t buf read-only<<
    find-in-files-pattern current-files "%S %s" format buf name<<
    directory buf directory<<

    current-buffer buf parent<<
    current-search :search buf buffer-set-property
    search-mode:get-instance buf mode<<
    find-in-files-local-map buf local-map<<

    buf buffer-list member-eq? [
        buf buffer-list vector-push
    ] unless

    buf set-current-buffer

    renumber
    t repaint?! ;

using: editor feral-core feline accessors ;
in: find-in-files

private

: find-in-files-goto-source
    :source-file dot-line line-get-property :> sourcefile
    :source-line-number dot-line line-get-property 1 or :> linenumber

    sourcefile find-buffer-from-file-name [
        set-current-buffer
        linenumber gotoline-internal
        // gotoline-internal calls maybe-reframe
    ] [
        sourcefile linenumber create-buffer/2
        reframe
    ] if* ;

: initialize-local-map
    128 <hashtable> :> m
    ' editor:kill-buffer feral-key:escape m set-at
    ' find-in-files-goto-source feral-key:enter m set-at
    m find-in-files-local-map! ;

initialize-local-map

feral-config:winui? #if
' find-in-files-goto-source feral-key:double-mouse-1 find-in-files-local-map set-at
#endif
