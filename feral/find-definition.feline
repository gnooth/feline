// Copyright (C) 2017-2020 Peter Graves <gnooth@gmail.com>

// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.

// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.

// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.

using: feral-core feline history mini ;
in: editor

: goto-location/2 // filename line-number -> void
    :> line-number :> filename
    filename [
        filename find-buffer-from-file-name // -> buffer/nil
        [
            // -> buffer
            set-current-buffer
            line-number gotoline-internal
        ] [
            filename line-number create-buffer/2
        ] if*
        maybe-reframe
        true repaint?!
    ] when ;

: goto-location/1 // 2array -> void
    1 ?enough dup second :> line-number first :> filename
    filename line-number goto-location/2 ;

: goto-definition                       // symbol -> void
    symbol-location // filename line-number
    goto-location/2 ;

feral-config:winui? feral-config:gtkui? or #if
: minibuffer-list-symbols               // symbols -> void
    256 <sbuf> :> sb
    [
        symbol-qualified-name sb sbuf-append-string
        '\s' sb sbuf-push
    ] each
    sb sbuf>string minibuffer-set-text ;
#else
: minibuffer-list-symbols               // symbols -> void
    0 message-y at-xy
    [ symbol-qualified-name write-string space ] each ;
#endif

: find-definition-internal              // string -> void
    feline-symbols:find-definition [ goto-location/1 ] when* ;

: find-definition

    "find-definition" set-history
    "Word: " minibuffer-accept-string
    [ find-definition-internal ] when* ;

// REVIEW name
: find-definition-at-dot

    dot-offset :> old-dot-offset
    dot-line indentation-length :> indent

    dot-char whitespace? [
        {
            { [ dot-offset indent < ] [ indent dot-offset! ] }
            { [ dot-offset 0> ] [ dot-offset 1- dot-offset! ] }
        } cond
    ] when

    identifier-at-dot                   // -> index/nil string/nil
    nip                                 // -> string/nil
    old-dot-offset dot-offset!
    [ find-definition-internal ] when* ;
