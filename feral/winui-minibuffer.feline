// Copyright (C) 2019 Peter Graves <gnooth@gmail.com>

// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.

// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.

// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.

using: history completion feral-core feline accessors ;
in: mini

feral-config:winui? assert

private

: minibuffer-update-caret-pos
    minibuf dot>> offset>> textview-char-width *
    0
    textview-set-caret-pos ;

: minibuffer-get-text                   // void -> string
    minibuf dot>> line>> text>> "" or ;

: repaint-minibuffer
    winui-hide-caret
    minibuffer-get-text !> s
    0 0 s winui-minibuffer-text-out
    s string-length 0 winui-minibuffer-clear-eol
    winui-show-caret ;

public

: minibuffer-set-text                   // string -> void
    1 ?enough verify-string

    minibuffer-get-text over sequence= [ drop ] [
        minibuf dot>> line>> text<<
        winui-minibuffer-invalidate
    ] if ;

private

: minibuffer-accept
    minibuffer-get-text minibuffer-contents!

    current-history [
        prompt length minibuffer-contents tail update-history
        nil current-history!
    ] when

    "" minibuffer-set-text
    nil set-completion-provider
    winui-minibuffer-exit ;

: minibuffer-cancel
    nil minibuffer-contents!
    "" minibuffer-set-text
    nil current-history!
    nil set-completion-provider
    winui-minibuffer-exit ;

: minibuffer-set-text-from-history ( s ) // string/nil -> void
    s nil? ?exit
    prompt s +
    [ minibuffer-set-text ]
    [ string-length dup minibuf dot>> offset<< textview-char-width * 0 textview-set-caret-pos ]
    bi

    winui-minibuffer-invalidate ;

: minibuffer-previous-history
    history-previous minibuffer-set-text-from-history ;

: minibuffer-next-history
    history-next minibuffer-set-text-from-history ;

: minibuffer-set-completion-text        // string/nil -> void
    minibuffer-set-text-from-history ;

: minibuffer-complete
    completion-provider nil? ?exit

    minibuffer-get-text :> s
    prompt length s tail
    completion-provider call :> completion

    completion string? [
        completion minibuffer-set-completion-text
    ] when ;

: lookup-key                            // key -> symbol/nil
    minibuffer-keymap at ;

defer minibuffer-insert-char

: minibuffer-dispatch                   // key -> void
    current-buffer minibuf assert-eq

    1 ?enough :> key

    current-command last-command!
    nil current-command!

    key lookup-key [
        dup current-command! call-symbol // REVIEW safe-call-symbol
        minibuffer-update-caret-pos
        winui-minibuffer-invalidate
    ] [
        key printable-char? [
            reset-completion
            minibuffer-insert-char
            minibuffer-update-caret-pos
            repaint-minibuffer
        ] when*
    ] if* ;

: winui-minibuffer-keydown              // key -> void
    minibuffer-dispatch ;

: winui-minibuffer-char                 // tagged-char -> void
    minibuffer-dispatch ;

public

: message                               // string -> void
    current-buffer minibuffer? [ drop ] [ minibuffer-set-text ] if ;

' message is feral-core:message

: clear-message
    current-buffer minibuffer? [ "" minibuffer-set-text ] unless ;

' clear-message is feral-core:clear-message

: show-message-briefly                  // string -> void
    current-buffer minibuffer? assert

    minibuffer-get-text :> saved-text
    copy-dot :> saved-dot

    minibuffer-set-text
    repaint-minibuffer
    1000 sleep
    saved-text minibuffer-set-text
    repaint-minibuffer
    saved-dot dot! ;

: minibuffer-accept-string              // prompt -> string/nil
    verify-string prompt!
    nil minibuffer-contents!

    prompt
    [ minibuffer-set-text ]
    [ string-length minibuf dot>> offset<< ]
    bi

    [
        current-buffer minibuf parent<<
        minibuf current-buffer!
        editor:reset-undo
        editor:reset-redo
        minibuffer-update-caret-pos
        winui-minibuffer-main
    ] keep-current-buffer

    minibuffer-contents [ prompt length minibuffer-contents tail ] [ nil ] if ;

: minibuffer-accept-string/2            // prompt default -> string/nil
    2 ?enough
    "" or verify-string :> default
    verify-string prompt!
    nil minibuffer-contents!

    prompt default +
    [ minibuffer-set-text ]
    [ string-length minibuf dot>> offset<< ]
    bi

    [
        current-buffer minibuf parent<<
        minibuf current-buffer!
        editor:reset-undo
        editor:reset-redo
        minibuffer-update-caret-pos
        winui-minibuffer-main
    ] keep-current-buffer

    minibuffer-contents [ prompt length minibuffer-contents tail ] [ nil ] if ;
