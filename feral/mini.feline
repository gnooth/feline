// Copyright (C) 2019 Peter Graves <gnooth@gmail.com>

// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.

// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.

// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.

using: feline feral-config ;
in: user

"mini" delete-vocab

winui? #if

using: feline accessors ;
in: mini

private

global minibuf

global minibuffer-contents

global prompt

tuple: minibuffer
    text ;

: create-minibuffer
    minibuffer make-instance minibuf!
    "" minibuf text<<
;

create-minibuffer

: repaint-minibuffer
    winui-hide-caret

    minibuf text>> :> s!                // string or sbuf

    s string? [ s sbuf>string s! ] unless

    0 0 s winui-minibuffer-text-out
    s length 0 winui-minibuffer-clear-eol

    winui-show-caret
;

public

: minibuffer-set-text                   // string-or-sbuf -> void
    minibuf text>> over sequence= [ drop ] [
        minibuf text<<
        winui-minibuffer-invalidate
    ] if
;

private

: do-enter
    minibuf text>> :> sb
    sb sbuf? assert-true

    sb sbuf>string minibuffer-contents!
    "" minibuffer-set-text
    winui-minibuffer-exit
;

: do-escape
    f minibuffer-contents!
    "" minibuffer-set-text
    winui-minibuffer-exit
;

: do-bs
    minibuf text>> :> sb
    sb sbuf? assert-true

    sb length prompt length > [
        sb length 1 - sb sbuf-shorten
        sb length winui-char-width * 0
        winui-set-caret-pos
        winui-minibuffer-invalidate
    ] when
;

: do-normal-char ( c )
    minibuf text>> :> sb
    sb sbuf? assert-true

    c sb sbuf-push
    sb length winui-char-width * 0
    winui-set-caret-pos
    winui-minibuffer-invalidate
;

global minibuffer-keymap

: initialize-minibuffer-keymap
    128 <hashtable> :> keymap
    ' do-enter  key:enter       keymap set-at
    ' do-escape key:escape      keymap set-at
    ' do-bs     key:backspace   keymap set-at
    keymap minibuffer-keymap!
;

initialize-minibuffer-keymap

: lookup-key                            // key -> symbol/f
    minibuffer-keymap at ;

: winui-minibuffer-char                 // tagged-char -> void
    dup printable-char? [
        do-normal-char
    ] [
        lookup-key [ call-symbol ] when*
    ] if ;

public

: message                               // string ->
    minibuffer-set-text
;

: clear-message
    "" minibuffer-set-text
;

: minibuffer-accept-string              // prompt -> string/f
    verify-string prompt!
    f minibuffer-contents!
    prompt string>sbuf minibuffer-set-text
    prompt length winui-char-width * 0 winui-set-caret-pos
    winui-minibuffer-main
    minibuffer-contents [
        prompt length
        minibuffer-contents length
        minibuffer-contents substring
    ] [ f ] if
;

#else

using: feline accept-string ;
in: mini

: status-y                              // -> n
    terminal-rows 2 - ;

: message-y                             // -> n
    terminal-rows 1- ;

: message                               // string ->
    0 message-y at-xy write-string ;

: clear-message hide-cursor 0 message-y at-xy clear-to-eol ;

: minibuffer-accept-string              // prompt-string -> string
    0 message-y at-xy
    accept-string
    clear-message
;

#endif
