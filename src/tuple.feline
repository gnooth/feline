// Copyright (C) 2016 Peter Graves <gnooth@gmail.com>

// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.

// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.

// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.

LANGUAGE: feline

USING: feline ;
IN: feline

: define-reader ( class-name slot-name slot-offset )
    rot string>sbuf                     // -- slot-name slot-offset sbuf
    '-' over push                       // -- slot-name slot-offset sbuf
    rot 2dup sbuf-append-string drop    // -- slot-offset sbuf
    sbuf>string current-vocab <symbol>
    dup current-vocab vocab-add-symbol  // -- slot-offset symbol

    [ \ slot@ 2array array>quotation ] dip
    symbol-set-def
;

: define-writer ( class-name slot-name slot-offset )
    rot string>sbuf                     // -- slot-name slot-offset sbuf
    '-' over push                       // -- slot-name slot-offset sbuf
    rot 2dup sbuf-append-string drop    // -- slot-offset sbuf
    '!' over push
    sbuf>string current-vocab <symbol>
    dup current-vocab vocab-add-symbol  // -- slot-offset symbol

    [ \ slot! 2array array>quotation ] dip
    symbol-set-def
;

: suffix! ( seq elt -- seq )
    over push
;

: define-class ( class-name -- class-symbol )
    current-vocab vocab-create-symbol
    t "class" pick symbol-set-prop
;

: define-tuple-class ( class-name slot-names -- )
    swap define-class                   // -- slot-names class-symbol
    "slots"                             // -- slot-names class-symbol "slots"
    swap                                // -- slot-names "slots" class-symbol

    [ symbol-set-prop ] keep            // -- class-symbol

    [ "slots" swap symbol-prop length ] keep // -- size class-symbol
    [ swap 2array ] keep                // -- array class-symbol
    "layout" swap symbol-set-prop
;

: tuple: ( -- )
    parse-token                         // -- string/f
    10 <vector>                         // -- string vector

    [ parse-token dup ";" string= ] [ suffix! ] until
    drop
    vector>array
    // -- class-name slot-names
    define-tuple-class
;
