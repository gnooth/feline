\ Copyright (C) 2016 Peter Graves <gnooth@gmail.com>

\ This program is free software: you can redistribute it and/or modify
\ it under the terms of the GNU General Public License as published by
\ the Free Software Foundation, either version 3 of the License, or
\ (at your option) any later version.

\ This program is distributed in the hope that it will be useful,
\ but WITHOUT ANY WARRANTY; without even the implied warranty of
\ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
\ GNU General Public License for more details.

\ You should have received a copy of the GNU General Public License
\ along with this program.  If not, see <http://www.gnu.org/licenses/>.

LANGUAGE: feline

CONTEXT: feline forth ;
CURRENT: feline

f global buffer
f global bindings
f global dot
f global history
f global history-index
f global accepted-string

: emit ( tagged-char -- )
    untag-char emit
;

: at-x ( col -- )
    esc[
    untag-fixnum 1+ (u.) type
    'G' emit
;

: clear-to-eol ( -- )
    esc[
    '0' emit
    'K' emit
;

: backspaces ( tagged -- )
    untag-fixnum backspaces
;

: redisplay ( -- )
    0 at-x
    prompt
    yellow foreground
    buffer sbuf> type
    clear-to-eol
    dot prompt-string length + at-x
;

: do-escape ( -- )
    0 buffer sbuf-shorten
    0 !> dot
    f !> history-index
    redisplay
;

: do-bs ( -- )
    dot 0 >
    [
        dot 1 - !> dot
        dot buffer sbuf-remove-nth! drop
        redisplay
    ]
    when
;

: do-home ( -- )
    prompt-string length at-x
    0 !> dot
;

: do-end ( -- )
    buffer length !> dot
    prompt-string length dot + at-x
;

: do-right ( -- )
    dot buffer length <
    [ dot 1 + !> dot dot prompt-string length + at-x ]
    when
;

: do-left ( -- )
    dot 0 >
    [ dot 1 - !> dot dot prompt-string length + at-x ]
    when
;

: do-normal-char ( c -- )
    dot buffer length <
    [ dot buffer sbuf-insert-nth! drop dot 1 + !> dot redisplay ]
    [
        dup emit
        dot 1 + !> dot
        buffer push
    ]
    if
;

: do-previous ( -- )
    history-index [ history length !> history-index ] unless
    history-index zero?
    [
        history-index 1 - !> history-index
        0 buffer sbuf-shorten
        buffer history-index history nth sbuf-append-string
        buffer length !> dot
        redisplay
    ]
    unless
;

: do-next ( -- )
    history-index
    [
        history length 1 - <
        [
            history-index 1 + !> history-index
            0 buffer sbuf-shorten
            buffer history-index history nth sbuf-append-string
            buffer length !> dot
            redisplay
        ]
        when
    ]
    when*
;

: history-file-pathname ( -- string )
    user-home ".feline-history" path-append
;

: initialize-history ( -- )
    history-file-pathname file-lines !> history
;

: bind-key ( key action -- )
    2array bindings push
;

: lookup-key ( key -- action|f )
    bindings length [ bindings nth array-first over = ] find-integer \ -- i|f
    nip dup [ bindings nth array-second ] [ drop f ] if
;

: initialize-bindings ( -- )
    10 <vector> !> bindings
    3                   ['] bye         bind-key
    $1b                 ['] do-escape   bind-key
    127                 ['] do-bs       bind-key        \ Linux
    8                   ['] do-bs       bind-key        \ Windows
    k-left  tag-char    ['] do-left     bind-key
    k-right tag-char    ['] do-right    bind-key
    k-home  tag-char    ['] do-home     bind-key
    k-end   tag-char    ['] do-end      bind-key
    k-up    tag-char    ['] do-previous bind-key
    k-down  tag-char    ['] do-next     bind-key
;

: accept-key ( -- tagged-char)
    ekey tag-char
;

: printable? ( tagged-char -- t|f )
    32 126 between tag-boolean
;

: process-key ( tagged-char -- )
    dup printable?
    [ do-normal-char ]
    [ lookup-key [ execute ] when* ]
    if
;

: terminator? ( tagged-char -- t|f )
    dup 10 = swap 13 = or
;

:noname ( -- string )
    256 <sbuf> !> buffer
    bindings [ initialize-bindings ] unless
    history  [ initialize-history  ] unless
    0 !> dot
    yellow foreground
    [ accept-key dup terminator? ] [ process-key ] until
    drop
    white foreground
    buffer sbuf>string
    dup history push

    \ gc protect
    dup !> accepted-string

    f !> buffer
; is accept-string

: test ( -- string )
    ?cr
    prompt
    accept-string
;

: install ( -- )
    ['] feline-query is query
;

install

empty!
