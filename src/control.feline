-- Copyright (C) 2017 Peter Graves <gnooth@gmail.com>

-- This program is free software: you can redistribute it and/or modify
-- it under the terms of the GNU General Public License as published by
-- the Free Software Foundation, either version 3 of the License, or
-- (at your option) any later version.

-- This program is distributed in the hope that it will be useful,
-- but WITHOUT ANY WARRANTY; without even the implied warranty of
-- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-- GNU General Public License for more details.

-- You should have received a copy of the GNU General Public License
-- along with this program.  If not, see <http://www.gnu.org/licenses/>.

using: feline ;
in: control

empty

public

0 >global: ignore-level

: ignoring? ignore-level 0 > ;

: stop-ignoring 0 !> ignore-level ;

private: process-next-token
    must-parse-token >local: token

    {
        { [ token    "#if" = ] [ ignore-level 1 + !> ignore-level ] }
        { [ token "#endif" = ] [ ignore-level 1 - !> ignore-level ] }
        { [ token  "#else" = ] [ ignore-level 1 = [ stop-ignoring ] when ] }
        [ ] -- otherwise, nothing to do
    } cond ;

: start-ignoring
    1 !> ignore-level
    [ ignoring? ] [ process-next-token ] while ;

--

using: feline control ;
in: feline

public

syntax: #if ( ? -> ) [ start-ignoring ] unless ;

syntax: #else
    ignore-level {
        { 0 [ start-ignoring ] }
        { 1 [  stop-ignoring ] }
        [ drop ]
    } case ;

syntax: #endif ignoring? [ ignore-level 1 - !> ignore-level ] when ;

syntax: #ifdef
    must-parse-token
    find-name nip
    postpone: #if ;

syntax: #ifndef
    must-parse-token
    find-name nip not
    postpone: #if ;
