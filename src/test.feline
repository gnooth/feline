LANGUAGE: feline

CONTEXT: feline ;
CURRENT: feline

// this is a comment
( this is another comment )

: check-t ( x -- )
    t = [ "failed" write ] unless
;

: check-false ( x -- )
    f = [ "failed" write ] unless
;

1 2 + 3 = check-t
1 2 + 4 = check-false

"test" "test" eq? check-false

V{ 1 2 3 } length 3 = check-t
V{ "this is a test" } length 1 = check-t

V{ 1 2 3 } [ dup + ] map V{ 2 4 6 } sequence= check-t

"this is a multiline
string" length 26 = check-t

clear

: multiline-string-test-1 ( -- )
    "this is
a multiline string"
    length 26 = check-t
;

multiline-string-test-1

: fixnum-test-1 ( -- )
    1 fixnum? check-t
    2 fixnum? check-t
    3 fixnum? check-t
    1 2 + 3 = check-t
    1 2 + fixnum? check-t
;

fixnum-test-1

: fixnum-test-2 ( -- )
    -1 fixnum? check-t
    -2 fixnum? check-t
    -3 fixnum? check-t
    -1 -2 + -3 = check-t
;

fixnum-test-2

: fixnum-test-3 ( -- )
    0 fixnum? check-t
    0 0 = check-t
    1 0 = check-false
    -1 0 = check-false
    1 -1 + 0 = check-t
    4 -4 + 0 = check-t
;

fixnum-test-3

// fixnum<
: fixnum-test-4 ( -- )
    1 2 fixnum< check-t
    2 1 fixnum< check-false
    -2 -1 fixnum< check-t
    -1 -2 fixnum< check-false
    -2 1 fixnum< check-t
    1 -2 fixnum< check-false
    1 2 < check-t
    2 1 fixnum>= check-t
    2 1 >= check-t
;

fixnum-test-4

: fixnum-test-5 ( -- )
    1 2 fixnum- -1 = check-t
    1 2 - -1 = check-t
;

fixnum-test-5

: fixnum-test-6 ( -- )
    2 3 fixnum* 6 = check-t
    2 3 * 6 = check-t
;

fixnum-test-6

: fixnum-test-7 ( -- )
    8 3 fixnum/i 2 = check-t
    8 3 / 2 = check-t
    -8 3 fixnum/i -2 = check-t
    -8 3 / -2 = check-t
;

fixnum-test-7

: fixnum-test-8 ( -- )
    7 3 fixnum-mod 1 = check-t
    7 3 mod 1 = check-t
    -7 3 fixnum-mod -1 = check-t
    -7 3 mod -1 = check-t
;

fixnum-test-8

// fixnum-bitand, bitand
: fixnum-test-9 ( -- )
    15 7 bitand 7 = check-t
    15 $f0 bitand 0 = check-t
    3 1 bitand 1 = check-t
;

fixnum-test-9

// fixnum+
: fixnum-test-10 ( -- )
    42 87 fixnum+ 129 = check-t
    -42 87 fixnum+ 45 = check-t
    42 -87 fixnum+ -45 = check-t
    -42 -87 fixnum+ -129 = check-t
;

fixnum-test-10

: fixnum-test-11 ( -- )
    MOST_POSITIVE_FIXNUM tag-fixnum most-positive-fixnum = check-t
    MOST_NEGATIVE_FIXNUM tag-fixnum most-negative-fixnum = check-t
    most-positive-fixnum untag-fixnum MOST_POSITIVE_FIXNUM = check-t
    most-negative-fixnum untag-fixnum MOST_NEGATIVE_FIXNUM = check-t
;

fixnum-test-11

: dip-test-1 ( -- )
    87 42 [ 3 * ] dip get-datastack V{ 261 42 } sequence= check-t
    clear
;

dip-test-1

: keep-test-1 ( -- )
    42 [ dup ] keep get-datastack V{ 42 42 42 } sequence= check-t
    clear
;

keep-test-1

: bi@-test-1
    3 4 [ dup ] bi@ get-datastack V{ 3 3 4 4 } sequence= check-t
    clear
;

bi@-test-1

: array-test-1 ( -- )
    10 42 <array>
    [ object? check-t ] keep
    [ array? check-t ] keep
    [ length 10 = check-t ] keep
    10 [ over nth 42 eq? check-t ] each-integer
    drop
;

array-test-1

: array-test-2 ( -- )
    10 f <array>
    10 [ ( array index ) [ number>string ] keep pick set-nth ] each-integer
    drop
;

array-test-2

// vector-insert-nth!
: vector-test-1 ( -- )
    17 0 V{ 0 1 2 3 } [ vector-insert-nth! ] keep
    V{ 17 0 1 2 3 } sequence= check-t
    clear
;

vector-test-1

?cr "Reached end of test.feline" write
