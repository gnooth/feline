// Copyright (C) 2018-2019 Peter Graves <gnooth@gmail.com>

// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.

// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.

// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.

using: feline ;
in: feline

private

: make-global ( name )                  // string -> void

    name new-symbol-in-current-vocab :> reader

    reader {
        [ symbol-set-global-bit ]
        [ <wrapper> ' symbol-value 2quotation ]
        [ symbol-set-def ]
        [ compile-word ]
    } cleave

    name "!" + new-symbol-in-current-vocab
    {
        [ drop reader <wrapper> ' symbol-set-value 2quotation ]
        [ symbol-set-def ]
        [ compile-word ]
    } cleave ;

: make-var ( name )                     // string -> void

    name new-symbol-in-current-vocab :> reader

    reader {
        [ symbol-set-thread-local-bit ]
        [ <wrapper> ' current-thread-local-get 2quotation ]
        [ symbol-set-def ]
        [ compile-word ]
    } cleave

    name "!" + new-symbol-in-current-vocab {
        [ drop reader <wrapper> ' current-thread-local-set 2quotation ]
        [ symbol-set-def ]
        [ compile-word ]
    } cleave ;

public

syntax: global must-parse-token make-global ;

syntax: var must-parse-token make-var ;

syntax: constant                        // x -> void
    parse-name
    swap 1array array>quotation over symbol-set-def compile-word ;
