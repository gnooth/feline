using: feline ;
in: bench-hashtable

empty

global ht

global count 1000000 count!

: test1
    2 make-equal-hashtable ht!
    count [ dup 17 + swap ht xputhash ] each-integer ;

: test2
    // assertions are slow
    count [ dup ht xgethash 17 - assert-eq ] each-integer ;

: test3
    // no assertions
    count [ ht xgethash drop ] each-integer ;

: test4
    // looking for keys that aren't there
    count [ count + ht xgethash drop ] each-integer ;

: bench
    // first verify correct behavior
    test1 test2 nil ht! gc

    ?nl "test1" print
    5 [ ' test1 time ] times

    gc

    ?nl "test2" print
    5 [ ' test2 time ] times

    gc

    ?nl "test3" print
    5 [ ' test3 time ] times

    gc

    ?nl "test4" print
    5 [ ' test4 time ] times

    nil ht! gc ;

global xht

: xtest1
    2 <hashtable> xht!
    count [ dup 17 + swap xht set-at ] each-integer ;

: xtest2
    // assertions are slow
    count [ dup xht at 17 - assert-eq ] each-integer ;

: xtest3
    // no assertions
    count [ xht at drop ] each-integer ;

: xtest4
    // looking for keys that aren't there
    count [ count + xht at drop ] each-integer ;

: xbench
    // first verify correct behavior
    xtest1 xtest2 nil xht! gc

    ?nl "xtest1" print
    5 [ ' xtest1 time ] times

    gc

    ?nl "xtest2" print
    5 [ ' xtest2 time ] times

    gc

    ?nl "xtest3" print
    5 [ ' xtest3 time ] times

    gc

    ?nl "xtest4" print
    5 [ ' xtest4 time ] times

    nil ht! gc ;
